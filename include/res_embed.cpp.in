// Embed content into hex array for in-memory caching

#include <cstring>
#include <map>
#include <memory>
#include <string>
#include <vector>

#include "res_embed.h"

#define STR(val) #val

using namespace std;

namespace {

extern "C" const char hex_content_@FILE_KEY_HASH@[];
extern "C" const int hex_size_@FILE_KEY_HASH@;

class AddFile_@FILE_KEY_HASH@
{
public :

	AddFile_@FILE_KEY_HASH@()
	{
		res::embed::add("@FILE_KEY@", reinterpret_cast<const char*>(&hex_content_@FILE_KEY_HASH@[0]),
			static_cast<size_t>(hex_size_@FILE_KEY_HASH@), STR(@FILE_MIME@));
	};
};

} // namespace

volatile static AddFile_@FILE_KEY_HASH@ addFile_@FILE_KEY_HASH@;

namespace res {

namespace embed {

namespace init {

void @FILE_KEY@()
{
	res::embed::add("@FILE_KEY@", reinterpret_cast<const char*>(&hex_content_@FILE_KEY_HASH@[0]),
		static_cast<size_t>(hex_size_@FILE_KEY_HASH@), STR(@FILE_MIME@));
}

} // namespace init

} // namespace embed

} // namespace res

